/*
 * File: app/view/ManageCommentsWindow.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BlogApp.view.ManageCommentsWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.managecommentswindows',

    height: 500,
    width: 798,
    layout: {
        type: 'fit'
    },
    title: 'Manage Comments',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    store: 'Comments',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            width: 517,
                            dataIndex: 'comment',
                            text: 'comment'
                        },
                        {
                            xtype: 'datecolumn',
                            dataIndex: 'created',
                            text: 'Date'
                        },
                        {
                            xtype: 'actioncolumn',
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e) {
                                        var store = view.getStore(),
                                            rec = store.getAt(rowIndex);

                                        // this is normally a job for the controller, but to keep the example simple we do it here
                                        store.remove(rec);
                                        store.sync();
                                    },
                                    altText: 'delete',
                                    icon: 'img/icons/delete.png',
                                    tooltip: 'delete'
                                }
                            ]
                        }
                    ],
                    viewConfig: {

                    }
                }
            ]
        });

        me.callParent(arguments);
    }

});