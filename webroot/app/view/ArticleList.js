/*
 * File: app/view/ArticleList.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BlogApp.view.ArticleList', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.articleslist',

    title: 'Articles',
    forceFit: true,
    store: 'Articles',
    columnLines: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'title',
                    flex: 1,
                    text: 'Name'
                },
                {
                    xtype: 'datecolumn',
                    width: 60,
                    dataIndex: 'date',
                    text: 'Created',
                    format: 'Y-m-d'
                },
                {
                    xtype: 'actioncolumn',
                    id: 'adminactioncolumn',
                    width: 40,
                    items: [
                        {
                            handler: function(view, rowIndex, colIndex, item, e) {
                                var store = view.getStore(),
                                    rec = store.getAt(rowIndex);

                                // this is normally a job for the controller, but to keep the example simple we do it here
                                store.remove(rec);
                                store.sync();
                            },
                            altText: 'delete',
                            icon: 'img/icons/delete.png',
                            tooltip: 'delete'
                        }
                    ]
                }
            ],
            viewConfig: {
                width: 100
            }
        });

        me.callParent(arguments);
    }

});