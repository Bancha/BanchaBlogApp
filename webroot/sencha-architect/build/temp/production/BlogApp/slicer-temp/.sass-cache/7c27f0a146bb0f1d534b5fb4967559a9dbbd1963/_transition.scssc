3.1.7 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@options{ :@children[o:Sass::Tree::ImportNode
;0;@:@imported_filename"shared;	[ :
@lineio:Sass::Tree::CommentNode:@silenti ;@;	[ :@lines[ :
@loud0:@value"ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;io:Sass::Tree::VariableNode:@guarded"!default:
@name" default-transition-property;@:
@expro:Sass::Script::String	;@:
@type:identifier;"all;i;	[ ;io;;"!default;" default-transition-duration;@;o:Sass::Script::Number:@original"1s;@:@denominator_units[ :@numerator_units["s;i;i;	[ ;io;;"!default;" default-transition-function;@;o:Sass::Script::Bool;@;F;i;	[ ;io;;"!default;"default-transition-delay;@;o;;@;F;i;	[ ;io;;"!default;"#transitionable-prefixed-values;@;o:Sass::Script::List	;@:@separator:
comma;[o;	;@;;;"transform;io;	;@;;;"transform-origin;i;i;	[ ;io;;i ;@;	[ ;[ ;0;"}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i!o:Sass::Tree::MixinDefNode;"transition-property;T;@;	[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"string:
@linei1;@:@operand1o:Sass::Script::Funcall
:
@name"type-of;@:@keywords{ ;i1:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;"property-1;@;i1:@operator:eq;i10[o:Sass::Tree::VariableNode:@guarded0;"property-1;@:
@expro;
;"unquote;@;{ ;i1;[o;	;"property_1;"property-1;@;i1:@children[ ;i1o;;0;"properties;@;o:Sass::Script::Funcall
;"compact;@:@keywords{ ;i2:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;"property-1;@;i2o;&	;'"property_2;"property-2;@;i2o;&	;'"property_3;"property-3;@;i2o;&	;'"property_4;"property-4;@;i2o;&	;'"property_5;"property-5;@;i2o;&	;'"property_6;"property-6;@;i2o;&	;'"property_7;"property-7;@;i2o;&	;'"property_8;"property-8;@;i2o;&	;'"property_9;"property-9;@;i2o;&	;'"property_10;"property-10;@;i2;	[ ;i2u;"¼[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ :
@linei30[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;[" -webkit-transition-property;@	:@children[ :@valueo:Sass::Script::Funcall
;"prefixed-for-transition;@	:@keywords{ ;	i3:
@args[o:Sass::Script::String	;@	:
@type:identifier;"-webkit;	i3o; 	;"properties;"properties;@	;	i3;	i3u;"¸[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ :
@linei40[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;["-moz-transition-property;@	:@children[ :@valueo:Sass::Script::Funcall
;"prefixed-for-transition;@	:@keywords{ ;	i4:
@args[o:Sass::Script::String	;@	:
@type:identifier;"	-moz;	i4o; 	;"properties;"properties;@	;	i4;	i4u;"°[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ :
@linei50[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;["-o-transition-property;@	:@children[ :@valueo:Sass::Script::Funcall
;"prefixed-for-transition;@	:@keywords{ ;	i5:
@args[o:Sass::Script::String	;@	:
@type:identifier;"-o;	i5o; 	;"properties;"properties;@	;	i5;	i5o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;["transition-property;@;	[ ;o;&	;'"properties;"properties;@;i6;i6;i0;%[[o;&;'"property_1;"property-1;{ o;&	;'" default_transition_property;" default-transition-property;@o;i&[o;&;'"property_2;"property-2;@oo;;@o;F;i'[o;&;'"property_3;"property-3;@oo;;@o;F;i([o;&;'"property_4;"property-4;@oo;;@o;F;i)[o;&;'"property_5;"property-5;@oo;;@o;F;i*[o;&;'"property_6;"property-6;@oo;;@o;F;i+[o;&;'"property_7;"property-7;@oo;;@o;F;i,[o;&;'"property_8;"property-8;@oo;;@o;F;i-[o;&;'"property_9;"property-9;@oo;;@o;F;i.[o;&;'"property_10;"property-10;@oo;;@o;F;i/o;;i ;@;	[ ;[ ;0;"¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i9o;!;"transition-duration;T;@;	[u;"Í[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"string:
@lineiI;@:@operand1o:Sass::Script::Funcall
:
@name"type-of;@:@keywords{ ;iI:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1;"duration-1;@;iI:@operator:eq;iI0[o:Sass::Tree::VariableNode:@guarded0;"duration-1;@:
@expro;
;"unquote;@;{ ;iI;[o;	;"duration_1;"duration-1;@;iI:@children[ ;iIo;;0;"durations;@;o;#
;"compact;@;${ ;iJ;%[o;&	;'"duration_1;"duration-1;@;iJo;&	;'"duration_2;"duration-2;@;iJo;&	;'"duration_3;"duration-3;@;iJo;&	;'"duration_4;"duration-4;@;iJo;&	;'"duration_5;"duration-5;@;iJo;&	;'"duration_6;"duration-6;@;iJo;&	;'"duration_7;"duration-7;@;iJo;&	;'"duration_8;"duration-8;@;iJo;&	;'"duration_9;"duration-9;@;iJo;&	;'"duration_10;"duration-10;@;iJ;	[ ;iJo:Sass::Tree::MixinNode;"experimental;@;	[ ;${ ;iM;%[o;	;@;;;"transition-duration;iKo;&	;'"durations;"durations;@;iKo;	;@;;;"	-moz;iLo;	;@;;;"-webkit;iLo;	;@;;;"-o;iLo:!Sass::Script::UnaryOperation	;@:@operando;	;@;;;"-ms;iL:@operator:not;iLo;-	;@;.o;	;@;;;"-khtml;iL;/;0;iLo;	;@;;;"official;iL;iH;%[[o;&;'"duration_1;"duration-1;{ o;&	;'" default_transition_duration;" default-transition-duration;@å;i>[o;&;'"duration_2;"duration-2;@åo;;@å;F;i?[o;&;'"duration_3;"duration-3;@åo;;@å;F;i@[o;&;'"duration_4;"duration-4;@åo;;@å;F;iA[o;&;'"duration_5;"duration-5;@åo;;@å;F;iB[o;&;'"duration_6;"duration-6;@åo;;@å;F;iC[o;&;'"duration_7;"duration-7;@åo;;@å;F;iD[o;&;'"duration_8;"duration-8;@åo;;@å;F;iE[o;&;'"duration_9;"duration-9;@åo;;@å;F;iF[o;&;'"duration_10;"duration-10;@åo;;@å;F;iGo;;i ;@;	[ ;[ ;0;"õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;iPo;!;"transition-timing-function;T;@;	[o;;0;"function-1;@;o;#
;"unquote;@;${ ;ia;%[o;&	;'"function_1;"function-1;@;ia;	[ ;iao;;0;"functions;@;o;#
;"compact;@;${ ;ib;%[o;&	;'"function_1;"function-1;@;ibo;&	;'"function_2;"function-2;@;ibo;&	;'"function_3;"function-3;@;ibo;&	;'"function_4;"function-4;@;ibo;&	;'"function_5;"function-5;@;ibo;&	;'"function_6;"function-6;@;ibo;&	;'"function_7;"function-7;@;ibo;&	;'"function_8;"function-8;@;ibo;&	;'"function_9;"function-9;@;ibo;&	;'"function_10;"function-10;@;ib;	[ ;ibo;,;"experimental;@;	[ ;${ ;ie;%[o;	;@;;;"transition-timing-function;ico;&	;'"functions;"functions;@;ico;	;@;;;"	-moz;ido;	;@;;;"-webkit;ido;	;@;;;"-o;ido;-	;@;.o;	;@;;;"-ms;id;/;0;ido;-	;@;.o;	;@;;;"-khtml;id;/;0;ido;	;@;;;"official;id;i`;%[[o;&;'"function_1;"function-1;{ o;&	;'" default_transition_function;" default-transition-function;@i;iV[o;&;'"function_2;"function-2;@io;;@i;F;iW[o;&;'"function_3;"function-3;@io;;@i;F;iX[o;&;'"function_4;"function-4;@io;;@i;F;iY[o;&;'"function_5;"function-5;@io;;@i;F;iZ[o;&;'"function_6;"function-6;@io;;@i;F;i[[o;&;'"function_7;"function-7;@io;;@i;F;i\[o;&;'"function_8;"function-8;@io;;@i;F;i][o;&;'"function_9;"function-9;@io;;@i;F;i^[o;&;'"function_10;"function-10;@io;;@i;F;i_o;;i ;@;	[ ;[ ;0;"¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;iho;!;"transition-delay;T;@;	[u;"¾[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"string:
@lineix;@:@operand1o:Sass::Script::Funcall
:
@name"type-of;@:@keywords{ ;ix:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1;"delay-1;@;ix:@operator:eq;ix0[o:Sass::Tree::VariableNode:@guarded0;"delay-1;@:
@expro;
;"unquote;@;{ ;ix;[o;	;"delay_1;"delay-1;@;ix:@children[ ;ixo;;0;"delays;@;o;#
;"compact;@;${ ;iy;%[o;&	;'"delay_1;"delay-1;@;iyo;&	;'"delay_2;"delay-2;@;iyo;&	;'"delay_3;"delay-3;@;iyo;&	;'"delay_4;"delay-4;@;iyo;&	;'"delay_5;"delay-5;@;iyo;&	;'"delay_6;"delay-6;@;iyo;&	;'"delay_7;"delay-7;@;iyo;&	;'"delay_8;"delay-8;@;iyo;&	;'"delay_9;"delay-9;@;iyo;&	;'"delay_10;"delay-10;@;iy;	[ ;iyo;,;"experimental;@;	[ ;${ ;i|;%[o;	;@;;;"transition-delay;izo;&	;'"delays;"delays;@;izo;	;@;;;"	-moz;i{o;	;@;;;"-webkit;i{o;	;@;;;"-o;i{o;-	;@;.o;	;@;;;"-ms;i{;/;0;i{o;-	;@;.o;	;@;;;"-khtml;i{;/;0;i{o;	;@;;;"official;i{;iw;%[[o;&;'"delay_1;"delay-1;{ o;&	;'"default_transition_delay;"default-transition-delay;@ä;im[o;&;'"delay_2;"delay-2;@äo;;@ä;F;in[o;&;'"delay_3;"delay-3;@äo;;@ä;F;io[o;&;'"delay_4;"delay-4;@äo;;@ä;F;ip[o;&;'"delay_5;"delay-5;@äo;;@ä;F;iq[o;&;'"delay_6;"delay-6;@äo;;@ä;F;ir[o;&;'"delay_7;"delay-7;@äo;;@ä;F;is[o;&;'"delay_8;"delay-8;@äo;;@ä;F;it[o;&;'"delay_9;"delay-9;@äo;;@ä;F;iu[o;&;'"delay_10;"delay-10;@äo;;@ä;F;ivo;;i ;@;	[ ;[ ;0;"*/* Transition all-in-one shorthand */;io;!;"single-transition;T;@;	[o;,;"transition;@;	[ ;${ ;i;%[o;#
;"compact;@;${ ;i;%[o;	;@;:
space;[	o;&	;'"property;"property;@;io;&	;'"duration;"duration;@;io;&	;'"function;"function;@;io;&	;'"
delay;"
delay;@;i;i;i;%[	[o;&;'"property;"property;{ o;&	;'" default_transition_property;" default-transition-property;@8;i}[o;&;'"duration;"duration;@8o;&	;'" default_transition_duration;" default-transition-duration;@8;i~[o;&;'"function;"function;@8o;&	;'" default_transition_function;" default-transition-function;@8;i[o;&;'"
delay;"
delay;@8o;&	;'"default_transition_delay;"default-transition-delay;@8;io;!;"transition;T;@;	[u;"î[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"default:
@linei;@:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1:
@name"transition-1;@;i:@operator:eq;i0[o:Sass::Tree::VariableNode:@guarded0;"transition-1;@:
@expro:Sass::Script::Funcall
;"compact;@:@keywords{ ;i:
@args[o:Sass::Script::List	;@:@separator:
space;[	o;	;" default_transition_property;" default-transition-property;@;io;	;" default_transition_duration;" default-transition-duration;@;io;	;" default_transition_function;" default-transition-function;@;io;	;"default_transition_delay;"default-transition-delay;@;i;i:@children[ ;io;;0;"transitions;@;o;;@;F;i;	[ ;iu;"g[o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:@options{ :
@type:identifier:@value"	list:
@linei;@	:@operand1o:Sass::Script::Funcall
:
@name"type-of;@	:@keywords{ ;i:
@args[o;
;"nth;@	;{ ;i;[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1;@	;io:Sass::Script::Number:@original"1;@	:@denominator_units[ :@numerator_units[ ;i;i:@operator:eq;i;@	;o; 
;o;	;@	;	;
;"	list;i;@	;o;
;"type-of;@	;{ ;i;[o;	;"transition_1;"transition-1;@	;i;;;i;:and;iu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:@guarded0:
@name"transitions:@options{ :
@expro:Sass::Script::Funcall
;"compact;@	:@keywords{ :
@linei:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1;@	;io;	;"transition_2;"transition-2;@	;io;	;"transition_3;"transition-3;@	;io;	;"transition_4;"transition-4;@	;io;	;"transition_5;"transition-5;@	;io;	;"transition_6;"transition-6;@	;io;	;"transition_7;"transition-7;@	;io;	;"transition_8;"transition-8;@	;io;	;"transition_9;"transition-9;@	;io;	;"transition_10;"transition-10;@	;i:@children[ ;i[o:Sass::Tree::VariableNode:@guarded0;"transitions;@	:
@expro;
;"	join;@	;{ ;i;[o;	;"transition_1;"transition-1;@	;io;
;"compact;@	;{ ;i;[o;	;"transition_2;"transition-2;@	;io;	;"transition_3;"transition-3;@	;io;	;"transition_4;"transition-4;@	;io;	;"transition_5;"transition-5;@	;io;	;"transition_6;"transition-6;@	;io;	;"transition_7;"transition-7;@	;io;	;"transition_8;"transition-8;@	;io;	;"transition_9;"transition-9;@	;io;	;"transition_10;"transition-10;@	;io;	;@	;	;
;"
comma;i:@children[ ;io;;0;"delays;@;o;#
;"comma-list;@;${ ;i;%[ ;	[ ;io;;0;"has-delays;@;o;;@;F;i;	[ ;io;;0;"webkit-value;@;o;#
;"comma-list;@;${ ;i;%[ ;	[ ;io;;0;"moz-value;@;o;#
;"comma-list;@;${ ;i;%[ ;	[ ;io;;0;"o-value;@;o;#
;"comma-list;@;${ ;i;%[ ;	[ ;io;;i ;@;	[ ;[ ;0;"/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i o:Sass::Tree::EachNode:
@listo;&	;'"transitions;"transitions;@;i¢;T;@;	[o;;i ;@;	[ ;[ ;0;"}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i£o;;0;"property;@;o;#
;"nth;@;${ ;i¥;%[o;&	;'"transition;"transition;@;i¥o;;"1;@;[ ;[ ;i;i¥;	[ ;i¥o;;0;"duration;@;o;;@;F;i¦;	[ ;i¦o;;0;"timing-function;@;o;;@;F;i§;	[ ;i§o;;0;"
delay;@;o;;@;F;i¨;	[ ;i¨u;"
[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"1:@options{ :@denominator_units[ :@numerator_units[ :@valuei:
@linei©;	@	:@operand1o:Sass::Script::Funcall
:
@name"length;	@	:@keywords{ ;i©:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;	@	;i©:@operator:gt;i©0[o:Sass::Tree::VariableNode:@guarded0;"duration;	@	:
@expro;
;"nth;	@	;{ ;i©;[o;	;"transition;"transition;	@	;i©o;;"2;	@	;
@
;[ ;i;i©:@children[ ;i©u;"[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"2:@options{ :@denominator_units[ :@numerator_units[ :@valuei:
@lineiª;	@	:@operand1o:Sass::Script::Funcall
:
@name"length;	@	:@keywords{ ;iª:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;	@	;iª:@operator:gt;iª0[o:Sass::Tree::VariableNode:@guarded0;"timing-function;	@	:
@expro;
;"nth;	@	;{ ;iª;[o;	;"transition;"transition;	@	;iªo;;"3;	@	;
@
;[ ;i;iª:@children[ ;iªu;"M[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@original"3:@options{ :@denominator_units[ :@numerator_units[ :@valuei:
@linei«;	@	:@operand1o:Sass::Script::Funcall
:
@name"length;	@	:@keywords{ ;i«:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;	@	;i«:@operator:gt;i«0[o:Sass::Tree::VariableNode:@guarded0;"
delay;	@	:
@expro;
;"nth;	@	;{ ;i«;[o;	;"transition;"transition;	@	;i«o;;"4;	@	;
@
;[ ;i	;i«:@children[ ;i«o;;0;"has-delays;	@	;o:Sass::Script::Bool;	@	;T;i«;[ ;i«o;;i ;@;	[ ;[ ;0;";/* If a delay is provided without a timing function */;i­u;"^[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:@options{ :@operando:Sass::Script::Variable	:@underscored_name"
delay:
@name"
delay;@:
@linei®:@operator:not;i®;@:@operand1o:Sass::Script::Funcall
;"is-time;@:@keywords{ ;i®:
@args[o;
	;"timing_function;"timing-function;@;i®;:and;i®0[o:Sass::Tree::VariableNode:@guarded0;"
delay;@:
@expro;
	;"timing_function;"timing-function;@;i®:@children[ ;i®o;;0;"timing-function;@;o:Sass::Script::Bool;@:@valueF;i®;[ ;i®o;;0;"has-delays;@;o;;@;T;i®;[ ;i®o;;i ;@;	[ ;[ ;0;"9/* Keep a list of delays in case one is specified */;i°o;;0;"delays;@;o;#
;"append;@;${ ;i±;%[o;&	;'"delays;"delays;@;i±o;#
;"if;@;${ ;i±;%[o;&	;'"
delay;"
delay;@;i±o;&	;'"
delay;"
delay;@;i±o;;"0s;@;[ ;["s;i ;i±;	[ ;i±o;;0;"webkit-value;@;o;#
;"append;@;${ ;i³;%[o;&	;'"webkit_value;"webkit-value;@;i³o;#
;"compact;@;${ ;i³;%[o;	;@;;1;[o;#
;"prefixed-for-transition;@;${ ;i³;%[o;	;@;;;"-webkit;i³o;&	;'"property;"property;@;i³o;&	;'"duration;"duration;@;i³o;&	;'"timing_function;"timing-function;@;i³;i³;	[ ;i³o;;0;"moz-value;@;o;#
;"append;@;${ ;i´;%[o;&	;'"moz_value;"moz-value;@;i´o;#
;"compact;@;${ ;i´;%[o;	;@;;1;[	o;#
;"prefixed-for-transition;@;${ ;i´;%[o;	;@;;;"	-moz;i´o;&	;'"property;"property;@;i´o;&	;'"duration;"duration;@;i´o;&	;'"timing_function;"timing-function;@;i´o;&	;'"
delay;"
delay;@;i´;i´;	[ ;i´o;;0;"o-value;@;o;#
;"append;@;${ ;iµ;%[o;&	;'"o_value;"o-value;@;iµo;#
;"compact;@;${ ;iµ;%[o;	;@;;1;[	o;#
;"prefixed-for-transition;@;${ ;iµ;%[o;	;@;;;"-o;iµo;&	;'"property;"property;@;iµo;&	;'"duration;"duration;@;iµo;&	;'"timing_function;"timing-function;@;iµo;&	;'"
delay;"
delay;@;iµ;iµ;	[ ;iµ;i¢:	@var"transitionu;"é[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ :
@linei¸0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;["-webkit-transition;@	:@children[ :@valueo; 	;"webkit_value;"webkit-value;@	;	i¸;	i¸o:Sass::Tree::CommentNode:@silenti ;@	;[ :@lines[ :
@loud0;"j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;	i¹u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:
@name"has-delays:@options{ :
@lineiº0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;["-webkit-transition-delay;@	:@children[ :@valueo; 	;"delays;"delays;@	;	iº;	iºu;"#[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ :
@linei»0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;["-moz-transition;@	:@children[ :@valueo; 	;"moz_value;"moz-value;@	;	i»;	i»u;"[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ :
@linei¼0[o:Sass::Tree::PropNode:
@tabsi :@prop_syntax:new;["-o-transition;@	:@children[ :@valueo; 	;"o_value;"o-value;@	;	i¼;	i¼o;(;)i ;*;+;["transition;@;	[ ;o;&	;'"transitions;"transitions;@;i½;i½;i;%[[o;&;'"transition_1;"transition-1;{ o;	;@9;;;"default;i[o;&;'"transition_2;"transition-2;@9o;;@9;F;i[o;&;'"transition_3;"transition-3;@9o;;@9;F;i[o;&;'"transition_4;"transition-4;@9o;;@9;F;i[o;&;'"transition_5;"transition-5;@9o;;@9;F;i[o;&;'"transition_6;"transition-6;@9o;;@9;F;i[o;&;'"transition_7;"transition-7;@9o;;@9;F;i[o;&;'"transition_8;"transition-8;@9o;;@9;F;i[o;&;'"transition_9;"transition-9;@9o;;@9;F;i[o;&;'"transition_10;"transition-10;@9o;;@9;F;io;;i ;@;	[ ;[ ;0;"Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;iÀo:Sass::Tree::FunctionNode;"comma-list;T;@;	[o:Sass::Tree::ReturnNode	;@;o;#
;"	join;@;${ ;iÂ;%[o;	;@;;1;[ ;iÂo;&	;'"	list;"	list;@;iÂo;	;@;;;"
comma;iÂ;	[ ;iÂ;iÁ;%[[o;&;'"	list;"	list;@o;	;@;;1;[ ;iÁo;;i ;@;	[ ;[ ;0;"i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;iÅo;5;"prefixed-for-transition;T;@;	[u;"[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"	list:
@lineiÇ;@:@operand1o:Sass::Script::Funcall
:
@name"type-of;@:@keywords{ ;iÇ:
@args[o:Sass::Script::Variable	:@underscored_name"property;"property;@;iÇ:@operator:eq;iÇu:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@name"
index:@options{ :@keywords{ :
@lineiÎ:
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values;"#transitionable-prefixed-values;@;	iÎo;	;"property;"property;@;	iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@options{ :
@expro:Sass::Script::Variable	:@underscored_name"property:
@name"property;@:
@lineiÑ:@children[ ;iÑ[o:Sass::Tree::ReturnNode	;@:
@expro: Sass::Script::Interpolation:@whitespace_after0:@before0:@whitespace_beforei;@:@aftero;;0;o;;F;0;0;@;0:@originally_text:originally_text:	@mido:Sass::Script::String	;@:
@type:identifier:@value"-;	iÏ;	iÏ;0;@;0;F;o;	;"property;"property;@;	iÏ;	iÏ;F;o;	;"prefix;"prefix;@;	iÏ;	iÏ:@children[ ;	iÏ[o:Sass::Tree::VariableNode:@guarded0;"new-list;@:
@expro;
;"comma-list;@;{ ;iÈ;[ :@children[ ;iÈo:Sass::Tree::EachNode:
@listo;	;"property;"property;@;iÉ:@has_childrenT;@;[o;;0;"new-list;@;o;
;"append;@;{ ;iÊ;[o;	;"new_list;"new-list;@;iÊo;
;"prefixed-for-transition;@;{ ;iÊ;[o;	;"prefix;"prefix;@;iÊo;	;"v;"v;@;iÊ;[ ;iÊ;iÉ:	@var"vo:Sass::Tree::ReturnNode	;@;o;	;"new_list;"new-list;@;iÌ;[ ;iÌ;iÆ;%[[o;&;'"prefix;"prefix;@0[o;&;'"property;"property;@0o;;i ;@;	[ ;[ ;0;"7/* Checks if the value given is a unit of time. */;iÖo;5;"is-time;T;@;	[u;"ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:@options{ :
@type:identifier:@value"number:
@lineiØ;@:@operand1o:Sass::Script::Funcall
:
@name"type-of;@:@keywords{ ;iØ:
@args[o:Sass::Script::Variable	:@underscored_name"
value;"
value;@;iØ:@operator:eq;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@options{ :
@expro:Sass::Script::Bool;@:@valueF:
@lineiÛ:@children[ ;
iÛ[o:Sass::Tree::ReturnNode	;@:
@expro:!Sass::Script::UnaryOperation	;@:@operando;	;@;o;
;"
index;@;{ ;iÙ;[o:Sass::Script::List	;@:@separator:
space;[o;	;@;	;
;"s;iÙo;	;@;	;
;"ms;iÙ;iÙo;
;"	unit;@;{ ;iÙ;[o;	;"
value;"
value;@;iÙ;:not;iÙ;;;iÙ:@children[ ;iÙ;i×;%[[o;&;'"
value;"
value;@0;i