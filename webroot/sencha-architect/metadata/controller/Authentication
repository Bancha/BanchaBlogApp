{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Authentication"
    },
    "designerId": "bd7c905b-5945-4966-9e89-6d97c6f82b3e",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "loginwindow button[action=login]",
                "designer|targetType": "Ext.button.Button",
                "fn": "onLoginClick",
                "implHandler": [
                    "// log the user in",
                    "var me = this, // keep reference to controller and window through scope",
                    "win = this.getLoginWindow(), ",
                    "values = win.down('form').getValues();",
                    "",
                    "// mask while asking the server",
                    "win.setLoading('logging in...');",
                    "",
                    "// login through the banchaRemotable method UsersController->login",
                    "Bancha.getStub('User').login(values, {",
                    "    success: function(result, response) {",
                    "        if(result.success) {",
                    "            // we are logged in, so hide login window",
                    "            win.hide();",
                    "",
                    "            // tell application about login",
                    "            var user = Ext.create('BlogApp.model.User', result.data);",
                    "            me.application.fireEvent('loggedin', user);",
                    "        } else {",
                    "            // error handling",
                    "            Ext.Msg.alert('Login Failed!', 'Username and password don\\'t match!');",
                    "            win.setLoading(false);",
                    "        }",
                    "    },",
                    "    failure: function(result, response) {",
                    "        Ext.Msg.alert('Warning!', 'Authentication server is unreachable or returned with an error');",
                    "        win.setLoading(false);",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onLoginClick",
            "designerId": "dc50409d-a144-4df1-91f3-09c7761c69b0"
        },
        {
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "userRecord"
                ],
                "fn": "onLoggedIn",
                "implHandler": [
                    "var me = this;",
                    "",
                    "// keep the record data",
                    "this.active_user = userRecord;",
                    "",
                    "// now that we are logged in the stores can be loaded",
                    "// (if you want a clean separation of concerns, just fire an application event 'logged in',",
                    "// so each controller loads it's own stores)",
                    "this.getStore('Users').load();",
                    "this.getStore('Comments').load();",
                    "this.getStore('Articles').load({",
                    "    callback: function() {",
                    "        // articles loaded tell everyone (see Articles controller onArticlesLoaded)",
                    "        me.application.fireEvent('articlesloaded');",
                    "    }",
                    "});"
                ],
                "name": "loggedin",
                "scope": "this"
            },
            "name": "onLoggedIn",
            "designerId": "9aac5947-4b3c-43d7-8326-6300013b1cac"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|displayName": "Viewport",
                "ref": "viewport",
                "selector": "viewport"
            },
            "name": "viewport",
            "designerId": "728e36ab-7bca-4315-a6b7-37e4a85e186b"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "loginWindow",
                "selector": "loginwindow"
            },
            "name": "loginWindow",
            "designerId": "297f7972-6c28-47f8-be33-3c466d6ca3bd"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "loginForm",
                "selector": "loginwindow formpanel"
            },
            "name": "loginForm",
            "designerId": "6c22024e-7bd4-4878-968c-94502271fb44"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "loginwindow textfield",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onLoginEnter",
                "implHandler": [
                    "if(e.keyCode === 13) { // is enter key",
                    "    this.onLoginClick();",
                    "}"
                ],
                "name": "keypress",
                "scope": "me"
            },
            "name": "onLoginEnter",
            "designerId": "05aaeafe-9813-4930-968c-a978cc3a0c66"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "tool[action=logout]",
                "designer|targetType": "Ext.panel.Tool",
                "fn": "onLogoutClick",
                "implHandler": [
                    "",
                    "// mask for user",
                    "this.getViewport().setLoading('Logging out...');",
                    "",
                    "// logout",
                    "Bancha.getStub('User').logout(function() {",
                    "    // user is logged out",
                    "    window.location.reload();",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onLogoutClick",
            "designerId": "b16741de-5fdb-4ec9-a55f-12c64591408b"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "var me = this;",
                    "",
                    "// ask server if already logged in",
                    "Bancha.getStub('User').login({}, {",
                    "success: function(result,response) {",
                    "    if(result.success) {",
                    "        // user is already logged in",
                    "        var user = Ext.create('BlogApp.model.User', result.data);",
                    "        me.application.fireEvent('loggedin', user);",
                    "    } else {",
                    "        // force user to log in",
                    "        var win = Ext.create('BlogApp.view.LoginWindow', {});",
                    "        win.show();",
                    "    }",
                    "}",
                    "});"
                ]
            },
            "name": "init",
            "designerId": "5e6c915c-955f-4cbf-a076-79a4752c8d46"
        }
    ]
}