/*
 * File: js/app/controller/Articles.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('BlogApp.controller.Articles', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'list',
            selector: 'articleslist'
        },
        {
            ref: 'articleView',
            selector: 'articleview'
        }
    ],

    init: function() {
        this.control({
            "articleslist": {
                selectionchange: this.onArticleListSelectionChange,
                afterrender: this.onStartup
            }
        });

        this.application.on({
            articlechanged: {
                fn: this.onArticleChanged
            }
        });
    },

    onArticleListSelectionChange: function(tablepanel, selections, options) {
        // make an application wide event
        this.application.fireEvent('articlechanged',selections[0]);
    },

    onArticleChanged: function(record) {
        // refresh the single article view
        var view = Ext.ComponentQuery.query('articleview')[0];
        // this.getArticleView(); should work a well, but there's a problem with references

        console.info(view);
        console.info(record.data);

        view.tpl.overwrite(view.el, record.data);


        // update the title
        Ext.ComponentQuery.query('#articlePanel')[0].setTitle(record.get('title'));
    },

    onStartup: function(abstractcomponent, options) {
        // select first element in the list
        var list = Ext.ComponentQuery.query('articlelist')[0];

        cosnole.info(list);

        list.getSelectionModel().select()
        store.clearFilter();
        store.filter('station', request.params.station);
        store.sort('played_date', 'ASC');

        // and everywhere else
        this.application.fireEvent('articlechanged',this.getArticlesStore().getAt(0));

        console.info('launch done');
    }

});