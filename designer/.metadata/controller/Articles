{
    "id": "ExtBox1-ext-gen32269",
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "stores": [
            "Articles"
        ],
        "designer|init": "",
        "designer|userClassName": "Articles"
    },
    "customConfigs": [],
    "designerId": "605f1b49-1e8a-4555-b989-141da478d287",
    "$viewOrder": 0,
    "expanded": false,
    "cn": [
        {
            "id": "ExtBox1-ext-gen53152",
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onArticleListSelectionChange",
                "implHandler": "        // make an application wide event\n        this.application.fireEvent('articlechanged',selections[0]);",
                "name": "selectionchange",
                "scope": "me",
                "designer|targetType": "Ext.grid.Panel",
                "designer|controlQuery": "articleslist",
                "designer|userClassName": "onArticleListSelectionChange"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen32398",
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "articlesList",
                "selector": "articleslist",
                "designer|userClassName": "articlesList"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen58059",
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "articleReader",
                "selector": "articlereader",
                "designer|userClassName": "articleReader"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen54770",
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onArticleChanged",
                "designer|params": [
                    "record"
                ],
                "implHandler": "        // refresh the single article view\n        var view = this.getArticleReader();\n        // not sure how exactly this.getArticleReaderView(); works\n\n        // update the content\n        view.tpl.overwrite(view.el, record.data);\n\n        // update the title\n        Ext.ComponentQuery.query('#articlePanel')[0].setTitle(record.get('title'));",
                "name": "articlechanged",
                "scope": "this",
                "designer|userClassName": "onArticleChanged"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen103892",
            "type": "applicationaction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onArticlesLoaded",
                "implHandler": "        // as default select the first articles list element\n        var firstRecord = this.getStore('Articles').getAt(0);\n        this.getArticlesList().getSelectionModel().select(firstRecord);\n\n        // this other views will be informed by the triggered application event 'articlechanged';",
                "name": "articlesloaded",
                "scope": "this",
                "designer|userClassName": "onArticlesLoaded"
            },
            "customConfigs": [],
            "expanded": true
        }
    ]
}