{
    "id": "ExtBox1-ext-gen77338",
    "type": "controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "stores": [
            "Users"
        ],
        "designer|init": "// force login\nvar win = Ext.create('BlogApp.view.LoginWindow', {});\nwin.show();",
        "designer|userClassName": "Login"
    },
    "customConfigs": [],
    "designerId": "bd7c905b-5945-4966-9e89-6d97c6f82b3e",
    "$viewOrder": 2,
    "expanded": false,
    "cn": [
        {
            "id": "ExtBox1-ext-gen83344",
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLogin",
                "implHandler": "// log the user in\nvar me = this, // keep reference to controller and window through scope\nwin = this.getLoginWindow(), \nvalues = win.items.items[0].getForm().getValues();\n\n// login through the banchaRemotable method UsersController->login\nBancha.getStubsNamespace().User.login(values, function(result,response) {\n\n    if(Ext.isObject(result) && result.id) {\n\n        // we got a record back, so we are logged in\n        win.hide();\n\n        // keep the record data\n        me.active_user = Ext.create('Bancha.model.User',result);\n\n        // now that we are logged in the stores can be loaded\n        // (if you want a clean separation of concerns, just fire an application event 'logged in',\n        // so each controller loads it's own stores)\n        me.getUsersStore().load();\n        me.getStore('Comments').load();\n        me.getStore('Articles').load({\n            callback: function() {\n                // articles loaded tell everyone (see Articles controller onArticlesLoaded)\n                me.application.fireEvent('articlesloaded');\n            }\n        });\n\n    } else {\n\n        // force login again\n\n        if(result && result.success===false) {\n            Ext.Msg.alert('Login Failed!', 'Username and password don\\'t match!');\n        } else {\n            Ext.Msg.alert('Warning!', 'Authentication server is unreachable or returned with an error');\n        }\n    }\n}); ",
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "button",
                "designer|userClassName": "onLogin"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen84392",
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "loginWindow",
                "selector": "loginwindow",
                "designer|userClassName": "loginWindow"
            },
            "customConfigs": [],
            "expanded": true
        },
        {
            "id": "ExtBox1-ext-gen88671",
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "loginForm",
                "selector": "loginWindow formpanel",
                "designer|userClassName": "loginForm"
            },
            "customConfigs": [],
            "expanded": true
        }
    ]
}