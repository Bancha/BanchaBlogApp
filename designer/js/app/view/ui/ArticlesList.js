/*
 * File: js/app/view/ui/ArticlesList.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('BlogApp.view.ui.ArticlesList', {
    extend: 'Ext.grid.Panel',

    title: 'Articles',
    forceFit: true,
    store: 'Articles',
    columnLines: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 80,
                    dataIndex: 'title',
                    text: 'Name'
                },
                {
                    xtype: 'datecolumn',
                    width: 140,
                    dataIndex: 'date',
                    text: 'Created',
                    format: 'Y-m-d'
                },
                {
                    xtype: 'actioncolumn',
                    width: 30,
                    dataIndex: 'id',
                    items: [
                        {
                            altText: 'edit',
                            getClass: function(id,metadata,record,rowIndex,colIndex,store){

                                // keep a reference for next execution
                                this.authorizationsStore = Ext.storeMgr.get('Authorzations');

                                // get the authorization from the model
                                var allowed = this.authorizationsStore.isAllowed('edit',value);

                                // delay rendering
                                if(allowed===-1) {
                                    // authorization now yet loaded
                                    if(!this.loadingAuthorizations) {

                                        this.loadingAuthorizations = true;

                                        // re-render when available
                                        this.authorizationsStore.on('loaded', {
                                            single: true,
                                            callback: function() {

                                                // re-render columns
                                                this.doLayout(); // (is this working)

                                                // change flag
                                                this.loadingAuthorizations = false;
                                            }
                                        });

                                        return 'loading-icon';
                                    }
                                }

                                // return correct icon
                                return allowed ? 'edit-icon' : 'x-hide-display';
                            },
                            icon: '',
                            tooltip: 'edit'
                        },
                        {
                            altText: 'delete',
                            icon: '',
                            tooltip: 'delete'
                        }
                    ]
                }
            ],
            viewConfig: {
                width: 100
            }
        });

        me.callParent(arguments);
    }

});