/*
 * File: js/app/controller/Login.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('BlogApp.controller.Login', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'loginWindow',
            selector: 'loginwindow'
        }
    ],

    init: function() {
        this.control({
            "button": {
                click: this.onLogin
            }
        });

        // force login
        Ext.create('BlogApp.view.LoginWindow', {});


        // set active_user.get(id);
    },

    onLogin: function(button, e, options) {
        // log the user in
        a = this;
        this.getLoginWindow().getForm().submit({ 
            api: {
                submit: Bancha.getStubsNamespace().Users.login // wie das????
            }
            waitTitle:'Connecting', 
            waitMsg:'Sending data...',

            // Functions that fire (success or failure) when the server responds. 
            // The one that executes is determined by the 
            // response that comes from login.asp as seen below. The server would 
            // actually respond with valid JSON, 
            // something like: response.write "{ success: true}" or 
            // response.write "{ success: false, errors: { reason: 'Login failed. Try again.' }}" 
            // depending on the logic contained within your server script.
            // If a success occurs, the user is notified with an alert messagebox, 
            // and when they click "OK", they are redirected to whatever page
            // you define as redirect. 

            success:function(){ 
                Ext.Msg.alert('Status', 'Login Successful!', function(btn, text){
                    if (btn == 'ok'){
                        var redirect = 'test.asp'; 
                        window.location = redirect;
                    }
                });
            },

            // Failure function, see comment above re: success and failure. 
            // You can see here, if login fails, it throws a messagebox
            // at the user telling him / her as much.  

            failure:function(form, action){ 
                if(action.failureType == 'server'){ 
                    obj = Ext.util.JSON.decode(action.response.responseText); 
                    Ext.Msg.alert('Login Failed!', obj.errors.reason); 
                }else{ 
                    Ext.Msg.alert('Warning!', 'Authentication server is unreachable : ' + action.response.responseText); 
                } 
                login.getForm().reset(); 
            } 
        }); 
    }

});